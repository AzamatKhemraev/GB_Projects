(()=>{"use strict";Vue.component("products-list",{props:["products"],template:'\n    <div class="products-list">\n      <product-item v-for="product in products" :productsList="product"></product-item>\n    </div>\n  '}),Vue.component("cart-list",{props:["cart"],template:'\n    <div class="cart-list">\n      <cart-item v-for="product in cart" :cartList="product"></cart-item>\n    </div>\n  '}),Vue.component("product-item",{data:()=>({API_URL:"http://localhost:3000"}),props:["productsList"],template:'\n    <div class="products-item">\n      <h3>{{productsList.product_name}}</h3>\n      <p>{{productsList.price}}</p>\n      <button class="add__btn" @click.prevent="addToCart"><i class="far fa-plus-square"></i></button>\n    </div>\n  ',methods:{async addToCart(){await fetch(`${this.API_URL}/addToCart`,{method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(this.productsList)})}}}),Vue.component("cart-item",{data:()=>({API_URL:"http://localhost:3000"}),props:["cartList"],template:'\n    <div class="cart-item">\n      <h3>{{cartList.product_name}}(<span class="quantity">{{cartList.quantity}}</span>)</h3>\n      <p>{{cartList.price}}</p>\n      <button class="add__btn" @click.prevent="removeProduct"><i class="far fa-trash-alt"></i></button>\n    </div>\n  ',methods:{async removeProduct(){await fetch(`${this.API_URL}/removeFromCart`,{method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(this.cartList)})}}}),Vue.component("cart",{data:()=>({cartList:[]}),template:'\n    <button class="cart-button" type="button" @click="getcartlist">Корзина</button>\n  ',methods:{getcartlist(){this.$emit("getcartlist",this.cartList)}}}),Vue.component("search",{data:()=>({search:""}),template:'\n    <div>\n        <input type="text" class="products-search"  v-model="search"/>\n        <button class="search-button" type="button" @click="searching">Искать</button>\n    </div>\n    ',methods:{searching(){this.$emit("searching",this.search)},getcartlist(){this.$emit("getcartlist",this.cartList)}}}),Vue.component("error",{props:["is-error"],template:'<h1 v-show="isError">Не удалось выполнить запрос к серверу</h1>'}),new Vue({el:"#app",data:{products:[],filteredProducts:[],cart:[],isVisibleCart:!0,isError:!1,API_URL:"http://localhost:3000"},methods:{async getProducts(){const t=await fetch(`${this.API_URL}/catalog`);if(t.ok){const s=await t.json();this.products=s,this.filteredProducts=s}else this.isError=!0,alert("Ошибка при соединении с сервером")},async getCart(){const t=await fetch(`${this.API_URL}/cart`);if(t.ok){const s=await t.json();this.cart=s}},filterProducts(t){this.filteredProducts=""==t?this.products:this.products.filter((s=>s.product_name==t))},getCartList(t){if(0==t.length)return alert("Корзина пуста")}},async mounted(){await this.getProducts(),await this.getCart()}})})();